#!/bin/bash

set -ex

IN_FOLDER=$1
OUT_FOLDER=$2
YEAR=$3
MONTH=$4
DAY=$5
DATE=$3$4$5
DATE_SLASH=$3/$4/$5

IN_FILE=$IN_FOLDER/$DATE.mid
OUT_FILE_PREFIX=$OUT_FOLDER/$DATE
OUT_AUDIO=${OUT_FILE_PREFIX}.wav
OUT_AUDIO_MP3=${OUT_FILE_PREFIX}.mp3
OUT_IMAGE=${OUT_FILE_PREFIX}.png
OUT_VIDEO_ONLY=${OUT_FILE_PREFIX}.vid.mp4
OUT_VIDEO_AUDIO=${OUT_FILE_PREFIX}.vid-aud.mp4
OUT_PIC=${OUT_FILE_PREFIX}.pic.jpg
OUT_PIC_VIDEO=${OUT_FILE_PREFIX}.pic.mp4
OUT_PIC_VIDEO_AUDIO=${OUT_FILE_PREFIX}.pic.sound.mp4
OUT_VIDEO=${OUT_FILE_PREFIX}.mp4

echo '########################################'
echo '# render midi -> audio'
echo '########################################'

echo '# render midi to audio'
fluidsynth -nli -r 44100 -o synth.cpu-cores=2 -Twav -F"$OUT_AUDIO" /usr/share/sounds/sf2/MuseScore_General_Full.sf2 "$IN_FILE"

echo '# normalize audio'
normalize-audio "$OUT_AUDIO"

echo '# wav -> mp3'
ffmpeg -loglevel warning -y -i "$OUT_AUDIO" -vn -ar 44100 -ac 2 -b:a 192k "$OUT_AUDIO_MP3"

echo '########################################'
echo '# render midi -> video'
echo '########################################'

DISPLAY="${DISPLAY:-:0}" MIDIVisualizer --midi "$IN_FILE" --size 1920 1080 --preroll 0 --postroll 1 --export "$OUT_VIDEO_ONLY" --format MPEG4 --color-keyboard 0 0 0 --color-particles 0.0504825 0.00509421 0.519608 --color-pedal 0.79902 0.0509179 0.0509179 --color-major 0.0504825 0.00509421 0.519608 -color-minor 0.0504825 0.00509421 0.519608 --color-wave 0.568627 0 0 --color-bg 0 0 0

echo '########################################'
echo '# add timestamp watermark'
echo '########################################'

echo '# create timestamp watermark'
convert \( -background none -gravity west -pointsize 64 -font DejaVu-Sans-Bold -fill white caption:"$DATE_SLASH" \
  \( +clone -background black -shadow 320x3-0-0  \) +swap -background none -layers merge +repage \) "$OUT_IMAGE"

echo '# combine video+watermark and audio'
ffmpeg -y -loglevel warning -i "$OUT_VIDEO_ONLY" -i "$OUT_IMAGE" -filter_complex "overlay=W-w-10:10" -i "$OUT_AUDIO_MP3" -codec:a copy "$OUT_VIDEO_AUDIO"

echo '########################################'
echo '# append picture to the end of the video'
echo '########################################'
echo '## jpg to mp4'
ffmpeg -loglevel warning -y -loop 1 -i "$OUT_PIC" -c:v libx264 -t 3 -pix_fmt yuv420p -vf scale=1920:1080 "$OUT_PIC_VIDEO"

echo '## add silent mp3'
ffmpeg -loglevel warning -y -ar 44100 -acodec pcm_s16le -f s16le -ac 2 -channel_layout 2.1 -i /dev/zero -i "$OUT_PIC_VIDEO" -vcodec copy -acodec libmp3lame -shortest "$OUT_PIC_VIDEO_AUDIO"

echo '## concat videos'
ffmpeg -loglevel warning -y -i "$OUT_VIDEO_AUDIO" -i "$OUT_PIC_VIDEO_AUDIO" -filter_complex "[0]scale=1920:1080:force_original_aspect_ratio=decrease,pad=1920:1080:(ow-iw)/2:(oh-ih)/2,setsar=1[v0];[1]scale=1920:1080:force_original_aspect_ratio=decrease,pad=1920:1080:(ow-iw)/2:(oh-ih)/2,setsar=1[v1];[v0][0:a:0][v1][1:a:0]concat=n=2:v=1:a=1[v][a]" -map "[v]" -map "[a]" "$OUT_VIDEO"

################################################################
## The following ways to concat videos did not work:
################################################################

################################################################
#ffmpeg -loglevel warning -y -f concat -safe 0 -i <(echo -e file $(pwd)/$OUT_VIDEO_AUDIO\\nfile $(pwd)/$OUT_PIC_VIDEO_AUDIO) -c copy "$OUT_VIDEO"
# videos concatted using '-f concat' work when playing locally with mp4, but they don't work in Youtube and Telegram :(
################################################################

################################################################
#ffmpeg -y -loglevel warning -i "$OUT_VIDEO_AUDIO" -i "$OUT_PIC_VIDEO_AUDIO" -filter_complex "[0:v][0:a][1:v][1:a] concat=n=2:v=1:a=1 [outv] [outa]" -map "[outv]" -map "[outa]" "$OUT_VIDEO"
# [Parsed_concat_0 @ 0x562560f33640] Input link in1:v0 parameters (size 1920x1080, SAR 2937:3664) do not match the corresponding output link in0:v0 parameters (1920x1080, SAR 1:1)
# [Parsed_concat_0 @ 0x562560f33640] Failed to configure output pad on Parsed_concat_0
# Error reinitializing filters!
# Failed to inject frame into filter network: Invalid argument
################################################################

################################################################
#ffmpeg -y -loglevel warning -i "$OUT_VIDEO_AUDIO" -i "$OUT_PIC_VIDEO_AUDIO" -filter_complex "[0]setdar=16/9[a];[1]setdar=16/9[b];[2]setdar=16/9[c];[3]setdar=16/9[d]; [a][b][c][d]concat=n=4:v=1:a=1" "$OUT_VIDEO"
# [Parsed_setdar_1 @ 0x5640234df9c0] Media type mismatch between the 'Parsed_setdar_1' filter output pad 0 (video) and the 'Parsed_concat_4' filter input pad 1 (audio)
# [AVFilterGraph @ 0x564023529080] Cannot create the link setdar:0 -> concat:1
# Error initializing complex filters.
# Invalid argument
################################################################

################################################################
#ffmpeg -y -loglevel warning -i "$OUT_VIDEO_AUDIO" -i "$OUT_PIC_VIDEO_AUDIO" -filter_complex "[0:v]scale=1920:1080:force_original_aspect_ratio=1[v0]; [1:v]scale=1920:1080:force_original_aspect_ratio=1[v1]; [v0][0:a][v1][1:a]concat=n=2:v=1:a=1[v][a]" -map [v] -map [a] "$OUT_VIDEO"
# [Parsed_concat_2 @ 0x563b078772c0] Input link in1:v0 parameters (size 1920x1080, SAR 2937:3664) do not match the corresponding output link in0:v0 parameters (1920x1080, SAR 1:1)
# [Parsed_concat_2 @ 0x563b078772c0] Failed to configure output pad on Parsed_concat_2
# Error reinitializing filters!
# Failed to inject frame into filter network: Invalid argument
# Error while processing the decoded data for stream #1:0
################################################################
